{"version":3,"sources":["node_modules/three/build/three.module.js","js/shader/fragment.glsl","js/shader/vertex.glsl","node_modules/three-orbit-controls/index.js","js/app.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","constructor","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Object","freeze","__proto__","Vector2","prototype","isVector2","scalar","v","multiplyScalar","e","elements","minVal","maxVal","divideScalar","sqrt","angle","atan2","distanceToSquared","dx","dy","alpha","v1","v2","offset","attribute","getX","getY","center","Symbol","iterator","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","SRGBToLinear","LinearToSRGB","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","p","toComponents","source","Color","isColor","setRGB","copy","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","size","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","toString","hue","saturation","lightness","delta","getHSL","color1","color2","getZ","NAMES","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","getDataURL","from","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","isTexture","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","setUvTransform","JSON","parse","stringify","needsUpdate","textures","metadata","generator","toJSON","wrap","dispatchEvent","uv","applyMatrix3","Vector4","z","w","isVector4","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","WebGLRenderTarget","options","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","dispose","clone","assign","DataArrayTexture","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","count","isWebGLMultipleRenderTargets","il","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","u1","sqrt1u1","sqrtu1","u2","u3","callback","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","Vector3","isVector3","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","u","Box3","Infinity","isBox3","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","halfSize","_vector$b","add","object","precise","expandByObject","box","isEmpty","addVectors","subVectors","point","vector","addScalar","updateWorldMatrix","geometry","attributes","position","fromBufferAttribute","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","_matrix$1","_quaternion$3","Euler","DefaultOrder","isEuler","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","error","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DefaultMatrixWorldAutoUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","arguments","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","toArray","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBeforeCompile","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","isMeshBasicMaterial","setValues","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRange","index1","index2","setXY","setXYZ","applyNormalMatrix","onUploadCallback","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","hasAttribute","tangents","getAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","CubeCamera","renderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","isPlane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","enableAll","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","makeOrthographic","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapMaterial","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","fromEquirectangular","fromCubemap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","getVertexShaderID","getFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","disableAll","enable","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","disable","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgamMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","__currentVersion","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","sRGBToLinear","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","isArrayCamera","cameras","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","inputjoint","jointPose","getJointPose","jointName","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","__data","cachedObject","chunkSize","chunkOffset","getUniformSize","storage","remainingSizeInChunk","boundary","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","gammaFactor","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","forEach","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","prepare","getProgram","material2","self","setFromProjectionMatrix","projectObject","camera2","renderScene","onAfterRender","isLOD","intersectsSprite","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","seqWithValue","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","setOptional","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","upload","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","segments","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","concat","absarc","absellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","holesPts","getPointsHoles","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","RawShaderMaterial","_sheen","_clearcoat","_iridescence","_transmission","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","HttpError","response","FileLoader","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","AnimationLoader","setPath","setRequestHeader","setWithCredentials","CompressedTextureLoader","setResponseType","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coeff","shBasis","LightProbe","MaterialLoader","getTexture","createMaterialFromType","materialLib","LoaderUtils","fromCharCode","decodeURIComponent","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","fetchOptions","res","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","isHemisphereLightProbe","sky","ground","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","targetObject","resolvedProperty","propertyIndex","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","UniformsGroup","isUniformsGroup","uniformsSource","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_tables","_generateTables","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","ImmediateRenderObject","WebGLMultisampleRenderTarget","DataTexture2DArray","DataTexture3D","BoxBufferGeometry","CapsuleBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","revision","__THREE__","module","exports","OrbitControls","require","THREE","Sketch","dom","offsetWidth","offsetHeight","devicePixelRatio","appendChild","innerWidth","innerHeight","controls","addObjects","resize","setupResize","that","progress","gui","dat","GUI","uvRate1","getElementById"],"mappings":"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","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '144';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022; // @deprecated since r137\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DefaultMatrixWorldAutoUpdate; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.DefaultMatrixWorldAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tcopyColorsArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t// @deprecated since r144\n\n\tmerge() {\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgamMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgamMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// @deprecated since r137\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst value = uniform.value;\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\t\t\tconst info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tconst value = uniform.value;\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t//\n\n\tObject.defineProperties( this, {\n\n\t\t// @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\t\treturn 2;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tfunction prepare( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tget autoUpdate() {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nvar AnimationUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n});\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat\n});\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r144\n\nclass BoxBufferGeometry extends BoxGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\n// r144\n\nclass CapsuleBufferGeometry extends CapsuleGeometry {\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\n// r144\n\nclass CircleBufferGeometry extends CircleGeometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ConeBufferGeometry extends ConeGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass CylinderBufferGeometry extends CylinderGeometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\n// r144\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass LatheBufferGeometry extends LatheGeometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\n// r144\n\nclass OctahedronBufferGeometry extends OctahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass PlaneBufferGeometry extends PlaneGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\n// r144\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass RingBufferGeometry extends RingGeometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ShapeBufferGeometry extends ShapeGeometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\n// r144\n\nclass SphereBufferGeometry extends SphereGeometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass TorusBufferGeometry extends TorusGeometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\n// r144\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\n// r144\n\nclass TubeBufferGeometry extends TubeGeometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D texture1;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nfloat PI = 3.141592653589793238;\\nvoid main()\\t{\\n\\t// vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\n\\tgl_FragColor = vec4(vUv,0.0,1.);\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nuniform vec2 pixels;\\nfloat PI = 3.141592653589793238;\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";","module.exports = function( THREE ) {\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls( object, domElement ) {\n\n\t\tthis.object = object;\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function update () {\n\n\t\t\t\tvar position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function() {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tvar spherical = new THREE.Spherical();\n\t\tvar sphericalDelta = new THREE.Spherical();\n\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tvar panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tvar panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tvar pan = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\treturn function pan ( deltaX, deltaY ) {\n\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\t//console.log( 'handleMouseDownPan' );\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\t//console.log( 'handleMouseMovePan' );\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( event ) {\n\n\t\t\t//console.log( 'handleMouseUp' );\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\t//console.log( 'handleMouseWheel' );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\t//console.log( 'handleKeyDown' );\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\t//console.log( 'handleTouchStartPan' );\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\t//console.log( 'handleTouchMovePan' );\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchEnd( event ) {\n\n\t\t\t//console.log( 'handleTouchEnd' );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\t\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tcenter: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\t\treturn this.target;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n};\n","import * as THREE from \"three\";\nimport fragment from \"./shader/fragment.glsl\";\nimport vertex from \"./shader/vertex.glsl\";\nlet OrbitControls = require(\"three-orbit-controls\")(THREE);\n\nexport default class Sketch {\n  constructor(options) {\n    this.scene = new THREE.Scene();\n\n    this.container = options.dom;\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1); \n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n\n    this.container.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n\n    // var frustumSize = 10;\n    // var aspect = window.innerWidth / window.innerHeight;\n    // this.camera = new THREE.OrthographicCamera( frustumSize * aspect / - 2, frustumSize * aspect / 2, frustumSize / 2, frustumSize / - 2, -1000, 1000 );\n    this.camera.position.set(0, 0, 2);\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.time = 0;\n\n    this.isPlaying = true;\n    \n    this.addObjects();\n    this.resize();\n    this.render();\n    this.setupResize();\n    // this.settings();\n  }\n\n  settings() {\n    let that = this;\n    this.settings = {\n      progress: 0,\n    };\n    this.gui = new dat.GUI();\n    this.gui.add(this.settings, \"progress\", 0, 1, 0.01);\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\"\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        resolution: { type: \"v4\", value: new THREE.Vector4() },\n        uvRate1: {\n          value: new THREE.Vector2(1, 1)\n        }\n      },\n      // wireframe: true,\n      // transparent: true,\n      vertexShader: vertex,\n      fragmentShader: fragment\n    });\n\n    this.geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.plane);\n  }\n\n  stop() {\n    this.isPlaying = false;\n  }\n\n  play() {\n    if(!this.isPlaying){\n      this.render()\n      this.isPlaying = true;\n    }\n  }\n\n  render() {\n    if (!this.isPlaying) return;\n    this.time += 0.05;\n    this.material.uniforms.time.value = this.time;\n    requestAnimationFrame(this.render.bind(this));\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nnew Sketch({\n  dom: document.getElementById(\"container\")\n});\n"]}