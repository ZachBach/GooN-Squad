{"id":"js/app.js","dependencies":[{"name":"C:\\Users\\auern\\GooN-Squad\\package.json","includedInParent":true,"mtime":1663636224911},{"name":"three","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\auern\\GooN-Squad\\js\\app.js","resolved":"C:\\Users\\auern\\GooN-Squad\\node_modules\\three\\build\\three.module.js"},{"name":"./shader/fragment.glsl","loc":{"line":2,"column":21,"index":53},"parent":"C:\\Users\\auern\\GooN-Squad\\js\\app.js","resolved":"C:\\Users\\auern\\GooN-Squad\\js\\shader\\fragment.glsl"},{"name":"./shader/vertex.glsl","loc":{"line":3,"column":19,"index":98},"parent":"C:\\Users\\auern\\GooN-Squad\\js\\app.js","resolved":"C:\\Users\\auern\\GooN-Squad\\js\\shader\\vertex.glsl"},{"name":"three/examples/jsm/controls/OrbitControls.js","loc":{"line":4,"column":30,"index":152},"parent":"C:\\Users\\auern\\GooN-Squad\\js\\app.js","resolved":"C:\\Users\\auern\\GooN-Squad\\node_modules\\three\\examples\\jsm\\controls\\OrbitControls.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar THREE = _interopRequireWildcard(require(\"three\"));\n\nvar _fragment = _interopRequireDefault(require(\"./shader/fragment.glsl\"));\n\nvar _vertex = _interopRequireDefault(require(\"./shader/vertex.glsl\"));\n\nvar _OrbitControls = require(\"three/examples/jsm/controls/OrbitControls.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Sketch = /*#__PURE__*/function () {\n  function Sketch(options) {\n    _classCallCheck(this, Sketch);\n\n    this.scene = new THREE.Scene();\n    this.container = options.dom;\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1);\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n    this.container.appendChild(this.renderer.domElement);\n    this.camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.001, 1000); // var frustumSize = 10;\n    // var aspect = window.innerWidth / window.innerHeight;\n    // this.camera = new THREE.OrthographicCamera( frustumSize * aspect / - 2, frustumSize * aspect / 2, frustumSize / 2, frustumSize / - 2, -1000, 1000 );\n\n    this.camera.position.set(0, 0, 2);\n    this.controls = new _OrbitControls.OrbitControls(this.camera, this.renderer.domElement);\n    this.time = 0;\n    this.isPlaying = true;\n    this.addObjects();\n    this.resize();\n    this.render();\n    this.setupResize(); // this.settings();\n  }\n\n  _createClass(Sketch, [{\n    key: \"settings\",\n    value: function settings() {\n      var that = this;\n      this.settings = {\n        progress: 0\n      };\n      this.gui = new dat.GUI();\n      this.gui.add(this.settings, \"progress\", 0, 1, 0.01);\n    }\n  }, {\n    key: \"setupResize\",\n    value: function setupResize() {\n      window.addEventListener(\"resize\", this.resize.bind(this));\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n      this.renderer.setSize(this.width, this.height);\n      this.camera.aspect = this.width / this.height;\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: \"addObjects\",\n    value: function addObjects() {\n      var that = this;\n      this.material = new THREE.ShaderMaterial({\n        extensions: {\n          derivatives: \"#extension GL_OES_standard_derivatives : enable\"\n        },\n        side: THREE.DoubleSide,\n        uniforms: {\n          time: {\n            type: \"f\",\n            value: 0\n          },\n          resolution: {\n            type: \"v4\",\n            value: new THREE.Vector4()\n          },\n          uvRate1: {\n            value: new THREE.Vector2(1, 1)\n          }\n        },\n        // wireframe: true,\n        // transparent: true,\n        vertexShader: _vertex.default,\n        fragmentShader: _fragment.default\n      });\n      this.geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n      this.plane = new THREE.Mesh(this.geometry, this.material);\n      this.scene.add(this.plane);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.isPlaying = false;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      if (!this.isPlaying) {\n        this.render();\n        this.isPlaying = true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.isPlaying) return;\n      this.time += 0.05;\n      this.material.uniforms.time.value = this.time;\n      requestAnimationFrame(this.render.bind(this));\n      this.renderer.render(this.scene, this.camera);\n    }\n  }]);\n\n  return Sketch;\n}();\n\nexports.default = Sketch;\nnew Sketch({\n  dom: document.getElementById(\"container\")\n});"},"sourceMaps":null,"error":null,"hash":"471969ce0dabbb54e69cafb8f7b7b8cb","cacheData":{"env":{}}}